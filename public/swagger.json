{
    "swagger": "2.0",
    "info": {
        "title": "Canvas LMS Class Visualizations API",
        "description": "An API that wraps around the Canvas LMS API",
        "version": "1.0.0"
    },
    "host": "canvas-viz-api.herokuapp.com",
    "schemes": [
        "https"
    ],
    "paths": {
        "/api/v1/": {
            "get": {
                "summary": "Home page",
                "tags": [
                    "Home"
                ],
                "responses": {
                    "200": {
                        "description": "API is up and running",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/client_id": {
            "get": {
                "summary": "Get URL to initiate Google OAuth",
                "description": "The APP needs the API's Google Client ID to initiate Google OAuth. The\nAPI creates the URL that needs to be called and returns it.\n",
                "tags": [
                    "Login"
                ],
                "responses": {
                    "200": {
                        "description": "The API returns the URL the APP can call to initiate Google OAuth\nsequence.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/use_callback_code": {
            "get": {
                "summary": "Returns user identification data",
                "description": "The APP needs a temporary token to use to communicate with the API. The\nAPI uses the Google user's email address to create this token. However,\nthe API does not trust the APP. So after retrieving an email address\nfrom Google, the API returns an unencrypted email address the APP can\nuse to identify the user, and a time-limited JWT containing the\nencrypted email address the APP can use as a bearer token to communicate\nwith the API. This bearer token is how the API identifies the user until\nanother bearer token is returned to the APP.\n",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "This is the `code` you get back from Google as part of the OAuth\nprocess. We will use this to get the user's credentials from Google.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Login"
                ],
                "responses": {
                    "200": {
                        "description": "A JSON object containing two key-value pairs",
                        "schema": {
                            "$ref": "#/definitions/Email"
                        }
                    }
                }
            }
        },
        "/api/v1/save_password": {
            "post": {
                "summary": "Saves user password and returns bearer token. This can be used for a new\nuser or a returning user who has forgotten their password.\n",
                "parameters": [
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token, use the `encrypted_email` value received from\nthe `/api/v1/use_callback_code` route using the `Bearer\nauthentication scheme`\n",
                        "required": true,
                        "type": "string",
                        "format": "byte"
                    }
                ],
                "tags": [
                    "Login"
                ],
                "responses": {
                    "200": {
                        "description": "A JWT valid for 3 hours. Use it as the bearer token for subsequent\nAPI calls.\n",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "400": {
                        "description": "Wrong token format",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "401": {
                        "description": "Body will be more specific, error stems from a problem with\ndecrypting the bearer token, most like due to expiration of token.\n",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/verify_password": {
            "get": {
                "summary": "To verify the user's password for a returning user.",
                "parameters": [
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token, use the `encrypted_email` value received from\nthe `/api/v1/use_callback_code` route using the `Bearer\nauthentication scheme`\n",
                        "required": true,
                        "type": "string",
                        "format": "byte"
                    }
                ],
                "tags": [
                    "Login"
                ],
                "responses": {
                    "200": {
                        "description": "A JWT valid for 3 hours. Use it as the bearer token for subsequent\nAPI calls.\n",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "400": {
                        "description": "Wrong token format",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "401": {
                        "description": "Body will be more specific, error stems from a problem with\ndecrypting the bearer token, most like due to expiration of token.\n",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/tokens": {
            "post": {
                "summary": "Save a canvas token for a user",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token, use the value received from either the\n`/api/v1/verify_password` or `/api/v1/save_password` route using the\n`Bearer authentication scheme`\n",
                        "required": true,
                        "type": "string",
                        "format": "byte"
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "description": "Canvas URL the user wants to access",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Canvas token the user got from Canvas",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Tokens"
                ],
                "responses": {
                    "200": {
                        "description": "A message either reporting whether canvas token was saved or not\n",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "400": {
                        "description": "Wrong token format",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "401": {
                        "description": "Body will be more specific, error stems from a problem with\ndecrypting the bearer token, most like due to expiration of token.\n",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                }
            },
            "get": {
                "summary": "Returns list of saved tokens saved by user as JSON array",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token, use the value received from either the\n`/api/v1/verify_password` or `/api/v1/save_password` route using the\n`Bearer authentication scheme`\n",
                        "required": true,
                        "type": "string",
                        "format": "byte"
                    }
                ],
                "tags": [
                    "Tokens"
                ],
                "responses": {
                    "200": {
                        "description": "A JSON array of all Canvas tokens saved by the user",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tokens"
                            }
                        }
                    },
                    "400": {
                        "description": "Wrong token format",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "401": {
                        "description": "Body will be more specific, error stems from a problem with\ndecrypting the bearer token, most like due to expiration of token.\n",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete all canvas token for a user",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token, use the `encrypted_email` value received from\nthe `/api/v1/use_callback_code` route using the `Bearer\nauthentication scheme`\n",
                        "required": true,
                        "type": "string",
                        "format": "byte"
                    }
                ],
                "tags": [
                    "Tokens"
                ],
                "responses": {
                    "200": {
                        "description": "Token deleted",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "400": {
                        "description": "Wrong token format",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "401": {
                        "description": "Body will be more specific, error stems from a problem with\ndecrypting the bearer token, most like due to expiration of token.\n",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "The user does not own this token.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            }
        },
        "/api/v1/token": {
            "delete": {
                "summary": "Delete a specific canvas token for a user",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token, use the value received from either the\n`/api/v1/verify_password` or `/api/v1/save_password` route using the\n`Bearer authentication scheme`\n",
                        "required": true,
                        "type": "string",
                        "format": "byte"
                    },
                    {
                        "name": "access_key",
                        "in": "query",
                        "description": "`access_token` of canvas token received from `get` call to\n`/api/v1/tokens` route\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Tokens"
                ],
                "responses": {
                    "200": {
                        "description": "Token deleted",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "400": {
                        "description": "Wrong token format",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "401": {
                        "description": "Body will be more specific, error stems from a problem with\ndecrypting the bearer token, most like due to expiration of token.\n",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "The user does not own this token.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            }
        },
        "/api/v1/courses": {
            "get": {
                "summary": "Get course list for a given token",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token, use the value received from either the\n`/api/v1/verify_password` or `/api/v1/save_password` route using the\n`Bearer authentication scheme`\n",
                        "required": true,
                        "type": "string",
                        "format": "byte"
                    },
                    {
                        "name": "access_key",
                        "in": "query",
                        "description": "`access_token` of canvas token received from `get` call to\n`/api/v1/tokens` route\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Canvas"
                ],
                "responses": {
                    "200": {
                        "description": "A JSON array of all Canvas courses linked to the user's canvas token\n",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Courses"
                            }
                        }
                    },
                    "400": {
                        "description": "Check the error message. If there is no error message - which is a\npossibility - then something very strange has happened.\n",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "401": {
                        "description": "Body will be more specific, error stems from a problem with\ndecrypting the bearer token, most like due to expiration of token.\n",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "The user does not own this token.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            }
        },
        "/api/v1/courses/{course_id}/{data}": {
            "get": {
                "summary": "Get specific course data from API",
                "description": "This route return data that can be used to create visualizations.\nEverything else was building up to this!\n",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "path",
                        "description": "`course_id` for the course can be found in the `id` key of the JSON\nobjects returned in the `/api/v1/courses` route\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "data",
                        "in": "path",
                        "description": "`data` has to be one of the following: `activity` - Course Level\nParticipation & Views, `users` - User Level Participation & Views,\n`assignments` - Course Level Assignment data, `quizzes` - Quiz data,\n`discussion_topics` - List of discussions from users,\n`student_summaries` - Summary of student page views, discussions,\nand assignment submission lateness, and `enrollments` - List of\nenrolled students.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token, use the value received from either the\n`/api/v1/verify_password` or `/api/v1/save_password` route using the\n`Bearer authentication scheme`\n",
                        "required": true,
                        "type": "string",
                        "format": "byte"
                    },
                    {
                        "name": "access_key",
                        "in": "query",
                        "description": "`access_token` of canvas token received from `get` call to\n`/api/v1/tokens` route\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Canvas"
                ],
                "responses": {
                    "200": {
                        "description": "This is entirely dependent on the `data` path. It could be an array,\nor a hash.\n"
                    },
                    "400": {
                        "description": "Check the error message. If there is no error message - which is a\npossibility - then it is likely that the `data` in the path is not\none of the required options.\n",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "401": {
                        "description": "Body will be more specific, error stems from a problem with\ndecrypting the bearer token, most like due to expiration of token.\n",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "The user does not own this token.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Courses": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "A unique identifier for the Canvas course. Return this value to the\nAPI for subsequent course-related requests.\n"
                },
                "other_values": {
                    "description": "Other values the Canvas API provides including: name, account_id, ...\n"
                }
            }
        },
        "Tokens": {
            "type": "object",
            "properties": {
                "obfuscated_canvas_token": {
                    "type": "string",
                    "description": "Token from canvas but obfuscated such that it can safely be displayed\n"
                },
                "canvas_url": {
                    "type": "string",
                    "description": "The URL the saved Canvas token can access"
                },
                "access_key": {
                    "type": "string",
                    "description": "A pseudo-unique identifier of tokens you must return when you want\nquery the Canvas API\n"
                }
            }
        },
        "Email": {
            "type": "object",
            "properties": {
                "encrypted_email": {
                    "type": "string",
                    "format": "Base64",
                    "description": "A JWT that needs to be returned for the next few calls to the\nAPI.\n"
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "description": "An email address the APP can use to identify the user"
                }
            }
        }
    }
}
